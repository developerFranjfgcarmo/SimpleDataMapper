<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleDataMapper</name>
    </assembly>
    <members>
        <member name="T:SimpleDataMapper.Connection.ClsConnection">
            <summary>
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._oConnection">
            <summary>
                Instancia de tipo SqlConnection que se conecta a la be de datos
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._sBd">
            <summary>
                Datos miembros para la conexión a la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._sContrenaBd">
            <summary>
                Datos miembros para la conexión a la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._sServidorDb">
            <summary>
                Datos miembros para la conexión a la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._sUsuarioBd">
            <summary>
                Datos miembros para la conexión a la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._oMiDataAdapter">
            <summary>
                Representa un conjunto de comandos de datos y una conexión de base de
                datos que se utilizan para rellenar un DataSet
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Connection.ClsConnection._oTransaccion">
            <summary>
                Representa una transacción de Transact-SQL que se realiza en una be de datos de SQL Server
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
                Método constructor de la clase conexión
            </summary>
            <param name="sServidorDb">Servidor de la base datos.</param>
            <param name="sBd">Catálogo de la base datos.</param>
            <param name="sUsuarioBd">Usuario de la base datos.</param>
            <param name="sContrenaBd">Contraseña de la base de datos.</param>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.Status">
            <summary>
                Indica el estado de la conexión de la base de datos.
            </summary>
            <returns>Devuelve un tipo ConnectionState que indica el estado de la conexión.</returns>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.DbOpen">
            <summary>
                Abre la conexión a la base datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.DbClose">
            <summary>
                Cierra la conexión a la base datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.DbBeginTransaction">
            <summary>
                Comienza una transacción a la base datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.BdCommit">
            <summary>
                Confirma la transacción actual a la base datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.BdRollBack">
            <summary>
                Cancela la transacción actual a la base datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.DbExecute(System.String)">
            <summary>
                Executa una instrucción DML (Insert, Delete, Update).
            </summary>
            <param name="sSql">Instrucción DML</param>
            <returns>Devuelve el número de registro afectados.</returns>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.InitDataAdapter(System.String)">
            <summary>
                Ejecuta una instrucción Select
            </summary>
            <param name="sQuery">Instrucción Select.</param>
            <returns>Devuelve un objeto DataSet.</returns>
        </member>
        <member name="M:SimpleDataMapper.Connection.ClsConnection.DataReader(System.String)">
            <summary>
                Ejecuta una instrucción Select
            </summary>
            <param name="sQuery">Instrucción Select.</param>
            <returns>Devuelve un objeto DataSet.</returns>
        </member>
        <member name="P:SimpleDataMapper.Connection.ClsConnection.SServidorDb">
            <summary>
                Devuelve el servidor de la base de datos.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Connection.ClsConnection.SContrenaBd">
            <summary>
                Devuelve la contraseña a la base de datos.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Connection.ClsConnection.SBD">
            <summary>
                Devuelve en nombre de la base datos.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Connection.ClsConnection.SUsuarioBD">
            <summary>
                Devuelve el usuario de la base datos.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Connection.ClsConnection.DBTransaccion">
            <summary>
                Obtiene el objeto oTransaccion.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Connection.ClsConnection.DbConnection">
            <summary>
                Obtiene el objeto oConnection.
            </summary>
        </member>
        <member name="T:SimpleDataMapper.Data.ClsExecuteQuery">
            <summary>
                Clase que realiza todas las llamadas instrucciónes de DML sobre la base de datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ClsExecuteQuery.oCon">
            <summary>
                Almacena la conexión a la base de datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ClsExecuteQuery.listObject">
            <summary>
                Almacena una colección de objetos de la misma clase.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ClsExecuteQuery.myValidateObject">
            <summary>
                Valida el Objeto con la tabla correspondiente.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ClsExecuteQuery.oColObject">
            <summary>
                Almacena una colección de objetos de diferentes clases pasados por parámetros.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.#ctor(SimpleDataMapper.Connection.ClsConnection)">
            <summary>
                Constructor de la clase ClsExecuteQuery.
            </summary>
            <param name="oCon">Instancia al Objeto conexión de la base de datos.</param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Insert(System.Collections.Generic.List{System.Object})">
            <summary>
                Inserción de registros de la tabla.
            </summary>
            <param name="myObject">
                Instancia de una lista de objetos de una clase con la que se compone la instrucción de Insert para realizar
                las diferentes inserciones. Los miembros de la clase deben ser System.Nullable.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Insert(System.Object[])">
            <summary>
                Inserción de registros de la tabla.
            </summary>
            <param name="myObject">
                Instancia de una clase o instancias de diferentes clase con la que se compone la instrucción de Insert para
                realizar
                las diferentes inserciones. Los miembros de la clase deben ser System.Nullable. Cada Objeto debe ser de una clase
                diferente y se debe pasar en el
                orden en el que se desea realizar cada operación, se debe tener cuidado con las foreing Key de las tablas.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Update(System.Collections.Generic.List{System.Object})">
            <summary>
                Actualización de registros de la tabla.
            </summary>
            <param name="obj">
                Instancia de una lista de objetos de una clase con la que se compone la instrucción de Update para realizar
                las diferentes actualizaciones. Los miembros de la clase deben ser System.Nullable.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Update(System.Object[])">
            <summary>
                Actualización de registros de la tabla.
            </summary>
            <param name="obj">
                Instancia de una clase o  instancias de diferentes clase con la que se compone la instrucción de Update para
                realizar
                las diferentes actualizaciones. Los miembros de la clase deben ser System.Nullable. Cada Objeto debe ser de una
                clase diferente y se debe pasar en el
                orden en el que se desea realizar cada operación, es decir se debe tener cuidado con las foreing Key de las tablas.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Delete(System.Object[])">
            <summary>
                Elimina los registros de la tabla.
            </summary>
            <param name="obj">
                Instancia de una clase o instacias de diferentes clases con la que se compone la instrucción DELETE para eliminar
                los registros de cada tabla. Los miembros de la clase deben System.Nullable. Cada Objeto debe ser de una clase
                diferente y se debe pasar en el
                orden en el que se desea realizar cada operación, es decir se debe tener cuidado con las foreing Key de las tablas.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Delete(System.Collections.Generic.List{System.Object})">
            <summary>
                Elimina los registros de la tabla.
            </summary>
            <param name="obj">
                Array de un de diferentes instancias de una clase, con la que se compone cada instrucción DELETE para eliminar
                un registro de tabla. Los miembros de la clase deben System.Nullable.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.Select(System.Object)">
            <summary>
                Obtiene el conjunto de resultados de una consulta Select en función del Objeto pasado.
            </summary>
            <param name="myObject">Objeto que se utilizará como filtro de la consulta Select y como resultado del Objeto ArrayList.</param>
            <returns>Devuelve un ArrayList del objeto pasado por parámetro.</returns>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.SelectDataSet(System.Object)">
            <summary>
                Obtiene el conjunto de resultados de una consulta Select en función del Objeto pasado.
            </summary>
            <param name="myObject">Objeto que se utilizará como filtro de la consulta Select y como resultado del Objeto ArrayList.</param>
            <returns>Devuelve un ArrayList del objeto pasado por parámetro.</returns>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.IniParamDml(System.Object[])">
            <summary>
                Inicializa el objeto para la instrucción DML.
            </summary>
            <param name="myObject">Lista de Objetos para realizar la instrucción DML.</param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.IniParamDml(System.Collections.Generic.List{System.Object})">
            <summary>
                Inicializa el objeto para la instrucción DML.
            </summary>
            <param name="myObject">Lista de Objetos para realizar la instrucción DML.</param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.ExecuteQuery(SimpleDataMapper.Data.QueryType)">
            <summary>
                Ejecuta la culsuta de UPDATE,INSERT,DELETE.
            </summary>
            <param name="eTipoQuery">Indica el tipo de operación.</param>
            <param name="obj">Indica el tipo de operación.</param>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.SelectQuery(SimpleDataMapper.Data.ClsExecuteQuery.DelegadoSelect)">
            <summary>
                Devuelve un arraylist obtenidos a través de una consulta SQL.
            </summary>
            <param name="funDel">Nombre de la función delegado que debe de ejecutar.</param>
            <returns>Devuelve un objeto ArrayList con el resultado de la consulta SQL.</returns>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.SelectDataSet">
            <summary>
                Devuelve un arraylist obtenidos a través de una consulta SQL.
            </summary>
            <returns>Devuelve un objeto ArrayList con el resultado de la consulta SQL.</returns>
        </member>
        <member name="M:SimpleDataMapper.Data.ClsExecuteQuery.SelectDataReader">
            <summary>
                Devuelve un arraylist obtenidos a través de una consulta SQL.
            </summary>
            <returns>Devuelve un objeto ArrayList con el resultado de la consulta SQL.</returns>
        </member>
        <member name="T:SimpleDataMapper.Data.ClsExecuteQuery.DelegadoSelect">
            <summary>
                Contiene la función delegado a la que tiene que apuntar para devolver la lista de resultados.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimpleDataMapper.Data.QueryType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.QueryType.Update">
            <summary>
                Transacción de actualización.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.QueryType.Insert">
            <summary>
                Transacción de inserción.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.QueryType.Delete">
            <summary>
                Transacción de borrado.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.QueryType.Select">
            <summary>
                Transacción de Obtención de registro.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.utilities.Disposable.Dispose">
            <summary>
                Método de IDisposable para desechar la clase.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.utilities.Disposable.Dispose(System.Boolean)">
            <summary>
                Método sobrecargado de Dispose que será el que
                libera los recursos, controla que solo se ejecute
                dicha lógica una vez y evita que el GC tenga que
                llamar al destructor de clase.
            </summary>
            <param name="dispose"></param>
        </member>
        <member name="M:SimpleDataMapper.utilities.Disposable.Finalize">
            <summary>
                Destructor de clase.
                En caso de que se nos olvide “desechar” la clase,
                el GC llamará al destructor, que tambén ejecuta la lógica
                anterior para liberar los recursos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ValidateObjects._colTables">
            <summary>
                Colección de tabla a actualizar.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ValidateObjects._validateTables">
            <summary>
                Almacena la lista de campos de la tabla, los cuales coinciden con la clase. El resto de campos serán tratados por
                la base de datos.
                Estos campos serán posteriormente utilizados para realizar las operaciones de DML.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Data.ValidateObjects._connection">
            <summary>
                Objeto que contiene la Conexión a la base de datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Data.ValidateObjects.#ctor(SimpleDataMapper.Connection.ClsConnection,System.Object[])">
            <summary>
                Constructor de la clase. Inicializa y valida los objetos con las tablas pasadas.
            </summary>
            <param name="oConnection">Objeto Conexión.</param>
            <param name="myColObjects">
                Lista de objetos sobre los cuales se van a realizar las instrucciones DML, esto objetos deben ser pasado en el
                orden en el que se
                desea que actualicen a la base de datos.
            </param>
        </member>
        <member name="M:SimpleDataMapper.Data.ValidateObjects.TypeData(SimpleDataMapper.DataBase.Column,System.String)">
            <summary>
                Devuelve el valor del campo con su valor correspondiente formateado.
            </summary>
            <param name="oColumn">Objeto ClsColumn, contiene toda la información sobre la columna de la tabla</param>
            <param name="sValue">Valor para el campo</param>
            <returns>Devuelve el valor formateado.</returns>
        </member>
        <member name="M:SimpleDataMapper.Data.ValidateObjects.GetWhere(System.String,SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass)">
            <summary>
                Obtenemos el Where para la tabla.
            </summary>
            <returns>Devuelve un string con la cadena instrucción Where.</returns>
        </member>
        <member name="P:SimpleDataMapper.Data.ValidateObjects.ColumnObjects">
            <summary>
                Devuelve la Colección de Objetos inicializados.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.PropertyType.DataType">
            <summary>
                Tipo de dato.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.PropertyType.FieldLength">
            <summary>
                Longuitud del campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.PropertyType.IsNull">
            <summary>
                Indica si permite nulos el campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.PropertyType.DefaultData">
            <summary>
                Valor por defecto del campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.PropertyType.PrimaryKey">
            <summary>
                Indica si el campo es primary key.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.PropertyType.CountPrimarykeys">
            <summary>
                Contiene el numero de campos clave de una tabla.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.ClsGeneral.IsNumeric(System.Object)">
            <summary>
                Devuelve un valor boolean que indica si la expresión de puede evaluar como número
            </summary>
            <param name="Expression">Parametro necesario, tipo Object</param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsGeneral.IsDate(System.Object)">
            <summary>
                Devuelve un valor boolean que indica si la expresión de puede evaluar como número
            </summary>
            <param name="Expression">Parametro necesario, tipo Object </param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsGeneral.NoNull(System.Object)">
            <summary>
                Función que comprueba si un valor es nulo, en cuyo caso devuelve una
                cadena vacía ("").
            </summary>
            <param name="Valor">
                Valor que se va a evaluar.
            </param>
            <returns>
                Devuelve el mismo valor o una cadena vacía("") si el valor es nulo.
            </returns>
        </member>
        <member name="T:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass">
            <summary>
                Esta clase almacena todas las propiedades y campos de una clase.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.Tablename">
            <summary>
                Variable obligatoria, Se debe definir el nombre de la tabla sobre la cual se va a realizar la operación DML.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass._oListPropertiesClass">
            <summary>
                Lista de propiedades del objeto.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass._oType">
            <summary>
                Representa al tipo de objeto (myObject).
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.#ctor(System.Object)">
            <summary>
                Constructor de la clase ClsObjectClass
            </summary>
            <param name="myObject"></param>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.LoadMenbersClass">
            <summary>
                Carga los campos y las propiedades de la clase.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.SetValue(System.Object,System.String)">
            <summary>
                Modifica el Valor de la propiedad de la clase
            </summary>
            <param name="value">Valor del campo de la propiedad</param>
            <param name="sName">Nombre de la propiedad.</param>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.SetValue(System.Object,System.Int32)">
            <summary>
                Modifica el Valor de la propiedad de la clase.
            </summary>
            <param name="value">Valor del campo de la propiedad.</param>
            <param name="index">Índice de la propiedad a modificar.</param>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.SetValue(System.Object,System.String,System.Int32)">
            <summary>
                Modifica el Valor de la propiedad de la clase.
            </summary>
            <param name="value">Valor del campo de la propiedad.</param>
            <param name="sName">Nombre de la propiedad.</param>
            <param name="index">Índice de la propiedad a modificar.</param>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.GetValue(System.Int32)">
            <summary>
                Obtiene el valor de la propiedad de la clase.
            </summary>
            <param name="index">Índice de la propiedad.</param>
            <returns>Devuelve el valor de la propiedad</returns>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.GetValue(System.String,System.Int32)">
            <summary>
                Obtiene el valor de la propiedad de la clase.
            </summary>
            <param name="sName">Nombre de la propiedad.</param>
            <param name="index">Índice de la propiedad.</param>
            <returns>Devuelve el valor de la propiedad</returns>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.FindElementPropertyClass(System.String)">
            <summary>
                Encuentra un elemento dentro del objeto list y se situa en este.
            </summary>
            <param name="sName">Nombre del objeto a buscar.</param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.CreateInstance">
            <summary>
                Crea una nueva instancia del objeto.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.ThereIsField(System.String)">
            <summary>
                Comprueba si existe el campo en la clase.
            </summary>
            <param name="sName">Nombre del campo.</param>
            <returns>Devuelve true si existe el campo y false si no existe.</returns>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.MyObject">
            <summary>
                Propiedad que obtiene o devuelve la instancia del objeto.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.STableName">
            <summary>
                Devuelve el nombre de la tabla.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.OMyMembersClass">
            <summary>
                Devuelve la lista de campos o datos miembros de las clase.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.Item(System.Int32)">
            <summary>
                Propiedad que lee o modifica los valores de las propiedades de la clase.
            </summary>
            <param name="index">Número del elemento a devolver.</param>
            <returns>Obtiene o almacena un valor en elemento indicado</returns>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsObjectClass.Item(System.String)">
            <summary>
                Propiedad que lee o modifica la propiedad de la clase.
            </summary>
            <param name="sName">Nombre del elemento.</param>
            <returns>Obtiene o almacena un valor en elemento indicado</returns>
        </member>
        <member name="T:SimpleDataMapper.Controller.ClsMemberClass.ClsFieldClass">
            <summary>
                Esta clase almacena los campos y las propiedades de la clase.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsFieldClass.#ctor(System.String,SimpleDataMapper.Controller.ClsMemberClass.ClsPropertyClass)">
            <summary>
                Constructor de la clase.
            </summary>
            <param name="sField">Campo de la clase</param>
            <param name="sProperty">Objeto ClsPorpertyClass que almacenará la propiedad del campo.</param>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsFieldClass.SField">
            <summary>
                Carga o devuelve el valor del campo.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsFieldClass.Property">
            <summary>
                Carga o devuelve la propiedad del campo.
            </summary>
        </member>
        <member name="T:SimpleDataMapper.Controller.ClsMemberClass.ClsPropertyClass">
            <summary>
                Almacena el nombre de una propiedad de una clase.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.Controller.ClsMemberClass.ClsPropertyClass.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
                Inicializa el objeto ClsPropertyClass.
            </summary>
            <param name="sProperty">Nombre de la propiedad.</param>
            <param name="bCanRead">Marca si la propiedad se puede leer.</param>
            <param name="bCanWrite">Marca si la propiedad se puede sobreescribir.</param>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsPropertyClass.SProperty">
            <summary>
                Carga o devuelve el nombre de la propiedad.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsPropertyClass.BCanWrite">
            <summary>
                Indica si la propiedad se puede cargar.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.Controller.ClsMemberClass.ClsPropertyClass.BCanRead">
            <summary>
                Indica si la propiedad se puede leer.
            </summary>
        </member>
        <member name="T:SimpleDataMapper.ClsStructure">
            <summary>
                adfsdf
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.NAME_TABLE">
            <summary>
                Nombre de la variable que contiene el nombre de la tabla a realizar la transacción.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.oColumns">
            <summary>
                Collección de Columnas de la tabla actual
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.oCon">
            <summary>
                Almacena la conexión a la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.oKeysColumns">
            <summary>
                Contiene la coleción de columnas claves y su correspondiente valor.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.oSchemaStruct">
            <summary>
                Contiene la estrutura de una tabla o de todas las tablas de la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.sPrimaryKeys">
            <summary>
                Almacena las Primary Keys de la tabla.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.sTableName">
            <summary>
                Nombre de la tabla actual de trabajo.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.#ctor(SimpleDataMapper.Connection.ClsConnection)">
            <summary>
                Constructor de la clase.
            </summary>
            <param name="oCon">Conexión de la base datos.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.#ctor(SimpleDataMapper.Connection.ClsConnection,System.String)">
            <summary>
                Constructor de la clase.
            </summary>
            <param name="oCon">Conexión de la base datos.</param>
            <param name="sNameTable">Nombre de la tabla para obtener el esquema.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.LoadSchema">
            <summary>
                Carga el esquema de la base de datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.LoadSchema(System.String)">
            <summary>
                Carga el esquema de una tabla de la base de datos.
            </summary>
            <param name="sNameTable"></param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.LoadTable(System.String)">
            <summary>
                Carga la estructura de una tabla.
            </summary>
            <param name="sNombreTable">Nombre de la tabla.</param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.IsKey(System.String)">
            <summary>
                Compruba si el campo es clave primaria
            </summary>
            <param name="sColumn">Nombre del campo</param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.GetProperty(System.String,SimpleDataMapper.ClsStructure.PropertyType)">
            <summary>
                Devuelve la propiedad del campo especificada
            </summary>
            <param name="sNombreCampo">
                Nombre del campo a buscar
            </param>
            <param name="oPropiedad">
                Propiedad que se va a devolver
            </param>
            <returns>
                Devuelve el valor de la propiedad
            </returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.GetQuery(SimpleDataMapper.ClsStructure.QueryType,System.Object)">
            <summary>
                Devuelve la consulta de actualización, borrado o inserción a la tabla.
            </summary>
            <param name="oType">Tipo se operación DELETE, UPDATE, INSERT, SELECT</param>
            <param name="obj">Colección de valores a actualizar a la tabla.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.GetWhere">
            <summary>
                Obtenemos el Where para la tabla.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.GetData(System.String,System.Object)">
            <summary>
                Función que formatea entre comillas simples (') el valor de un campo
                pasado como parámetro si el tipo de datos es varchar o datetime.
            </summary>
            <param name="sNombreCampo">
                Nombre del campo cuyo contenido se va a retornar cuando la propiedad Tag del control
                especifica más de un campo separado por ";"
            </param>
            <param name="sValorCampo">
                Valor que contiene el campo que será formateado
            </param>
            <returns>
                Devuelve o no entre comillas el valor que contiene el control dependiendo del tipo de
                datos del campo de la tabla al que corresponda.
            </returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.TypeData(System.String,System.String)">
            <summary>
                Devuelve el valor del campo con su valor correspondiente.
            </summary>
            <param name="sTipoCampo"></param>
            <param name="sValorCampo"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.CheckTable(System.Object)">
            <summary>
                Comprueba si esta definido el datos miembro BASETABLE
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.CheckKeys(System.Object)">
            <summary>
                Comprueba si esta definido los campos clave de la tabla, si no esta definido debe dar un error.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.CheckFields(System.Object)">
            <summary>
                Compruba si están definidos todos los campos de la base de datos
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.ValueInitial">
            <summary>
                Inicializa las variables a nulo.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.Save(System.Object)">
            <summary>
                Añade un nuevo campo a la tabla.
            </summary>
            <param name="obj">Objeto que contiene la información de la clase.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.Update(System.Object)">
            <summary>
                Actuliza la tabla
            </summary>
            <param name="obj">Objeto que contiene la información de la clase.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.Delete(System.Object)">
            <summary>
                Borrar un registro.
            </summary>
            <param name="obj">Objeto que contiene la información de la clase.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.ExecuteQuery(System.Object,SimpleDataMapper.ClsStructure.QueryType)">
            <summary>
                Ejecuta la culsuta de UPDATE,INSERT,DELETE.
            </summary>
            <param name="eTipoQuery">Indica el tipo de operación.</param>
            <param name="obj">Indica el tipo de operación.</param>
        </member>
        <member name="M:SimpleDataMapper.ClsStructure.GetFields(System.Object)">
            <summary>
                Obtiene los valores de los campos.
            </summary>
            <param name="obj">Objeto que contiene los datos del registro de la tabla.</param>
        </member>
        <member name="P:SimpleDataMapper.ClsStructure.OColumns">
            <summary>
                Collección de Columnas de la tabla actualmente inializada.
            </summary>
        </member>
        <member name="T:SimpleDataMapper.ClsStructure.PropertyType">
            <summary>
                Tipos de propiedades de los campos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.PropertyType.DataType">
            <summary>
                Tipo de dato.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.PropertyType.FieldLength">
            <summary>
                Longuitud del campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.PropertyType.ISNull">
            <summary>
                Indica si permite nulos el campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.PropertyType.DefaultData">
            <summary>
                Valor por defecto del campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.PropertyType.PrimaryKey">
            <summary>
                Indica si el campo es primary key.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.PropertyType.CountPrimarykeys">
            <summary>
                Contiene el numero de campos clave de una tabla.
            </summary>
        </member>
        <member name="T:SimpleDataMapper.ClsStructure.QueryType">
            <summary>
                Tipos de Query para atacar la base datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.QueryType.UPDATE">
            <summary>
                Transacción de actualización.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.QueryType.INSERT">
            <summary>
                Transacción de inserción.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.QueryType.DELETE">
            <summary>
                Transacción de borrado.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsStructure.QueryType.SELECT">
            <summary>
                Transacción de Obtención de registro.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.ClsTraccer.bDebug">
            <summary>
                Guarda un texto en un Fichero de Texto
            </summary>
        </member>
        <member name="T:SimpleDataMapper.DataBase.Column">
            <summary>
                Almacena las información de cada columna de la tabla.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Column.NameColumn">
            <summary>
                Nombre de la columna.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Column.IsNull">
            <summary>
                Es nulo el campo.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Column.PrimaryKey">
            <summary>
                Es primary key el campo.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Column.DataType">
            <summary>
                Tipo de dato.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Column.DefaultData">
            <summary>
                Dato por defecto.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Column.FieldLenght">
            <summary>
                Longuitud del Campo.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.Schema._conection">
            <summary>
                Objeto que almacena la conexión de la base de datos.
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.Schema._nameTable">
            <summary>
                Nombre de la tabla activa
            </summary>
        </member>
        <member name="F:SimpleDataMapper.DataBase.Schema._tables">
            <summary>
                Colección de listas de tablas.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Schema.#ctor(SimpleDataMapper.Connection.ClsConnection)">
            <summary>
                Inicializa el esquema de la base de datos.
            </summary>
            <param name="connection">Objeto que contiene la conexión a la base de datos.</param>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Schema.#ctor(System.String,SimpleDataMapper.Connection.ClsConnection)">
            <summary>
                Inicializa sólo una tabla de la base de datos.
            </summary>
            <param name="sNameTable">Nombre de la tabla a inicializar.</param>
            <param name="oConection">Objeto que contiene la conexión a la base de datos.</param>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Schema.GetTable(System.String)">
            <summary>
                Obtiene el objeto tabla (Columnas, primary key, valores por defecto, etc)
            </summary>
            <param name="nameTable">Nombre de la tabla.</param>
            <returns>Devuelve un Objeto ClsTable</returns>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Schema.LoadPrimaryKey(SimpleDataMapper.DataBase.Table)">
            <summary>
                Inicializa los campos PrimaryKey de la tabla.
            </summary>
            <param name="table">Objeto ClsTable que debe contener toda la información de la tabla.</param>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Schema.LoadSchema">
            <summary>
                Carga el esquema de la base de datos.
            </summary>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Schema.LoadTable(System.String)">
            <summary>
                Carga la estructura de una tabla(Columnas).
            </summary>
            <param name="sNombreTable">Nombre de la tabla.</param>
            <returns>Devuelve un objeto del tipo ClsTable.</returns>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Table.#ctor">
            <summary>
                Inicialización del objeto sin pasarle parámetros
            </summary>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Table.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{SimpleDataMapper.DataBase.Column})">
            <summary>
                Inicializa del objeto pasándole parámetros.
            </summary>
            <param name="nameTable">Nombre de la tabla.</param>
            <param name="columnPrimaryKey">Colección de Columnas que son Primary.</param>
            <param name="listColums">Colección de objeto ClsColumn.</param>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Table.IsPrimaryKeys(System.String)">
            <summary>
                Comprueba si el campo es Primary key.
            </summary>
            <param name="nameColumn">Nombre de la Columna.</param>
            <returns>Devuelve un True si el campo es Primary Key y false en caso contrario.</returns>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Table.GetColumn(System.String)">
            <summary>
                Obtiene el objeto Columna de la tabla.
            </summary>
            <param name="nameColumn">Nombre de la Columna.</param>
            <returns>Devuelve un objeto ClsColumn</returns>
        </member>
        <member name="M:SimpleDataMapper.DataBase.Table.CountPk">
            <summary>
                Devuelve el número de primary key que tiene la tabla
            </summary>
            <returns>Devuelve un entero con el número de primary key.</returns>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Table.ColColums">
            <summary>
                Lista de Columnas de la tabla.
            </summary>
        </member>
        <member name="P:SimpleDataMapper.DataBase.Table.ColPrimaryKey">
            <summary>
                Lista de campos de la PrimaryKey.
            </summary>
        </member>
    </members>
</doc>
